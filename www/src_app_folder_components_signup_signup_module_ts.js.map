{"version":3,"sources":["./src/app/folder/components/signup/signup-routing.module.ts","./src/app/folder/components/signup/signup.module.ts","./src/app/folder/components/signup/signup.page.ts","./src/services/domain/cidade.service.ts","./src/services/domain/estado.service.ts","./src/app/folder/components/signup/signup.page.scss","./src/app/folder/components/signup/signup.page.html"],"names":[],"mappings":"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","file":"src_app_folder_components_signup_signup_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SignupPage } from './signup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SignupPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SignupPageRoutingModule } from './signup-routing.module';\r\n\r\nimport { SignupPage } from './signup.page';\r\nimport { HomePageRoutingModule } from '../home/home-routing.module';\r\nimport { CidadeService } from 'src/services/domain/cidade.service';\r\nimport { EstadoService } from 'src/services/domain/estado.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, //modulo necessario para carregar o formulario da pagina\r\n    IonicModule,\r\n    SignupPageRoutingModule,\r\n    ReactiveFormsModule, //modulo necessario para carregar o formulario da pagina\r\n    HomePageRoutingModule\r\n  ],\r\n  declarations: [SignupPage],\r\n  providers: [\r\n    CidadeService,\r\n    EstadoService\r\n  ]\r\n})\r\nexport class SignupPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController, LoadingController, NavController, NavParams, MenuController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { CidadeService } from 'src/services/domain/cidade.service';\r\nimport { EstadoService } from 'src/services/domain/estado.service';\r\nimport { EstadoDTO } from 'src/models/estado.dto';\r\nimport { CidadeDTO } from 'src/models/cidade.dto';\r\nimport { ClienteService } from 'src/services/domain/cliente.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss']\r\n})\r\nexport class SignupPage implements OnInit {\r\n\r\n  grupoFormulario: FormGroup;\r\n  estados: EstadoDTO[];\r\n  cidades: CidadeDTO[];\r\n\r\n  constructor(\r\n    public navParam: NavParams,\r\n    public navCtrl: NavController,\r\n    public formBuilder: FormBuilder,\r\n    public cidadeService: CidadeService,\r\n    public estadoService: EstadoService,\r\n    public clienteService: ClienteService,\r\n    public alertCtrl: AlertController,\r\n    public loadingCtrl: LoadingController,\r\n    public menu: MenuController) { \r\n    \r\n    \r\n    //Esta tendo erro ao acessar os \"estados\" no backend, necessario habilitar o HTTPS no Spring Boot, trabalhoso\r\n    this.grupoFormulario = this.formBuilder.group({\r\n      nome: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(120)]], //valor inicial, valores validos\r\n      email: ['', [Validators.required, Validators.email]],\r\n      tipo : ['1', [Validators.required]],\r\n      cpfOuCnpj : ['06134596280', [Validators.required, Validators.minLength(11), Validators.maxLength(14)]],\r\n      senha : ['', [Validators.required]],\r\n      logradouro : ['Rua Via', [Validators.required]],\r\n      numero : ['25', [Validators.required]],\r\n      complemento : ['Apto 3', []],\r\n      bairro : ['Copacabana', []],\r\n      cep : ['10828333', [Validators.required]],\r\n      telefone1 : ['977261827', [Validators.required]],\r\n      telefone2 : ['', []],\r\n      telefone3 : ['', []],\r\n      estadoId : [null, [Validators.required]],\r\n      cidadeId : [null, [Validators.required]]   \r\n    });\r\n  }\r\n\r\n  isLoading: boolean = false; //variavel para verificar se a pagina esta carregando ou nao\r\n\r\n  ionViewWillEnter() { //desabilita o Menu na tela de Cadastro\r\n    this.menu.swipeGesture(false);\r\n    }\r\n\r\n  ionViewDidLeave() { //habilita o Menu na tela de Cadastro\r\n    this.menu.swipeGesture(true);\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n    this.estadoService.encontrarTodos()\r\n    .subscribe(resposta => {\r\n      this.estados = resposta;\r\n      this.grupoFormulario.controls.estadoId.setValue(this.estados[0].id) //pega o primeiro estado da lista\r\n      this.updateCidades(); //busca as cidades do estado selecionado\r\n    }, error =>{})\r\n  }\r\n\r\n  updateCidades(){\r\n    let estado_id = this.grupoFormulario.value.estadoId\r\n    if(estado_id!=null){ //corrige o alerta na tela de estado null\r\n      this.cidadeService.encontrarTodos(estado_id)\r\n      .subscribe(response => {\r\n        this.cidades = response;\r\n        this.grupoFormulario.controls.cidadeId.setValue(null); //tira a seleçao da caixa da cidade selecionada\r\n      }, error =>{})\r\n    }\r\n  }\r\n\r\n  cadastrarUsuario(){\r\n    this.showLoader();\r\n    this.clienteService.inserir(this.grupoFormulario.value)\r\n    .subscribe(response => {\r\n      this.showInsertOk();\r\n    },\r\n    error => {}\r\n    );\r\n  }\r\n\r\n  async showInsertOk(){ //mostra uma msg na tela informando sobre o cadastro\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Sucesso!',\r\n      message: 'Cadastro efetuado com sucesso!\\n Verifique seu email!',\r\n      backdropDismiss: false, // p fechar e necessario clicar na msg\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => {\r\n          this.navCtrl.navigateRoot('folder/components/home') //desimpilhar a pagina e volta para o login\r\n        }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async showLoader(){ //metodo usado em requisicoes q podem demorar, gerando a tela de Loading...\r\n    this.isLoading = true;\r\n    const loading = await this.loadingCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Enviando Email!   Aguarde...',\r\n      duration: 2000\r\n    });\r\n    await loading.present().then(() => {\r\n      console.log('carregando');\r\n      if(!this.isLoading)\r\n        loading.dismiss().then(() => console.log('Dismiss'))\r\n    })\r\n  }\r\n\r\n}\r\n","import { CategoriaDTO } from '../../models/categoria.dto';\r\nimport { API_CONFIG } from '../../config/api.config';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class CidadeService{\r\n\r\n    constructor(public http: HttpClient){\r\n\r\n    }\r\n\r\n    //Requisicao Assincrona -> Observable\r\n    encontrarTodos(estado_id: string): Observable<CategoriaDTO[]>{\r\n        return this.http.get<CategoriaDTO[]>(`${API_CONFIG.baseUrl}/estados/${estado_id}/cidades`) //acesso ao BackEnd do SpringBoot\r\n    }\r\n\r\n    erroTratamento(e: any): Observable<any>{\r\n        console.log('Ocorreu um erro!', true)\r\n        return e;\r\n      }\r\n\r\n      \r\n\r\n}","import { CategoriaDTO } from '../../models/categoria.dto';\r\nimport { API_CONFIG } from '../../config/api.config';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class EstadoService{\r\n\r\n    constructor(public http: HttpClient){\r\n\r\n    }\r\n\r\n    //Requisicao Assincrona -> Observable\r\n    encontrarTodos(): Observable<CategoriaDTO[]>{\r\n        return this.http.get<CategoriaDTO[]>(`${API_CONFIG.baseUrl}/estados`) //acesso ao BackEnd do SpringBoot\r\n    }\r\n\r\n    erroTratamento(e: any): Observable<any>{\r\n        console.log('Ocorreu um erro!', true)\r\n        return e;\r\n      }\r\n\r\n      \r\n\r\n}","export default \".danger {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxVQUFBO0FBQUoiLCJmaWxlIjoic2lnbnVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZGFuZ2Vye1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4iXX0= */\";","export default \"<!-- Barra superiro do Menu -->\\r\\n<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button> <!-- botao de voltar, colocar o nome da pagina, n e necessario criar funcao --> \\r\\n    </ion-buttons>\\r\\n    <ion-title>Cadastrar</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- tirado diretamente do GitHub do curso, n foi explicado -->\\r\\n<ion-content padding>\\r\\n  <form [formGroup]=\\\"grupoFormulario\\\" (ngSubmit)=\\\"cadastrarUsuario(); $event.preventDefault()\\\">\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Nome*</ion-label>\\r\\n      <ion-input formControlName=\\\"nome\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.nome.dirty && grupoFormulario.controls.nome.errors\\\" margin-left>Valor inválido</p> <!-- em caso de erro de validacao -->\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Email*</ion-label>\\r\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.email.dirty && grupoFormulario.controls.email.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-radio-group formControlName=\\\"tipo\\\">\\r\\n      <ion-list-header>\\r\\n        <h3>Tipo de cliente:</h3>\\r\\n      </ion-list-header>\\r\\n      <ion-item>\\r\\n        <ion-label>Pessoa física</ion-label>\\r\\n        <ion-radio checked=\\\"true\\\" value=\\\"1\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label>Pessoa jurídica</ion-label>\\r\\n        <ion-radio value=\\\"2\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n    </ion-radio-group>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label stacked>CPF ou CNPJ</ion-label>\\r\\n      <ion-input formControlName=\\\"cpfOuCnpj\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.cpfOuCnpj.dirty && grupoFormulario.controls.cpfOuCnpj.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Senha*</ion-label>\\r\\n      <ion-input formControlName=\\\"senha\\\" type=\\\"password\\\"></ion-input>\\r\\n    </ion-item> \\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.senha.dirty && grupoFormulario.controls.senha.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Logradouro*</ion-label>\\r\\n      <ion-input formControlName=\\\"logradouro\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.logradouro.dirty && grupoFormulario.controls.logradouro.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Número*</ion-label>\\r\\n      <ion-input formControlName=\\\"numero\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.numero.dirty && grupoFormulario.controls.numero.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Complemento</ion-label>\\r\\n      <ion-input formControlName=\\\"complemento\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Bairro</ion-label>\\r\\n      <ion-input formControlName=\\\"bairro\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>CEP*</ion-label>\\r\\n      <ion-input formControlName=\\\"cep\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.cep.dirty && grupoFormulario.controls.cep.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Telefone 1*</ion-label>\\r\\n      <ion-input formControlName=\\\"telefone1\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <p class=\\\"danger\\\" *ngIf=\\\"grupoFormulario.controls.telefone1.dirty && grupoFormulario.controls.telefone1.errors\\\" margin-left>Valor inválido</p>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Telefone 2</ion-label>\\r\\n      <ion-input formControlName=\\\"telefone2\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Telefone 3</ion-label>\\r\\n      <ion-input formControlName=\\\"telefone3\\\" type=\\\"text\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Estado*</ion-label>\\r\\n      <ion-select formControlName=\\\"estadoId\\\" (ionChange)=\\\"updateCidades()\\\"> <!-- ionChange: metodo q muda as ciadades qdo muda o estado -->\\r\\n        <ion-select-option *ngFor=\\\"let estado of estados\\\" [value]=\\\"estado.id\\\" >{{estado.nome}}</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label stacked>Cidade*</ion-label>\\r\\n      <ion-select formControlName=\\\"cidadeId\\\">\\r\\n        <ion-select-option *ngFor=\\\"let cidade of cidades\\\" [value]=\\\"cidade.id\\\">{{cidade.nome}}</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"grupoFormulario.invalid\\\">Criar conta</ion-button>\\r\\n  </form>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}