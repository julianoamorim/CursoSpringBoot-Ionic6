{"version":3,"sources":["./src/app/folder/components/confirmacao-pedido/confirmacao-pedido-routing.module.ts","./src/app/folder/components/confirmacao-pedido/confirmacao-pedido.module.ts","./src/app/folder/components/confirmacao-pedido/confirmacao-pedido.page.ts","./src/services/domain/pedido.service.ts","./src/app/folder/components/confirmacao-pedido/confirmacao-pedido.page.scss","./src/app/folder/components/confirmacao-pedido/confirmacao-pedido.page.html"],"names":[],"mappings":"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","file":"src_app_folder_components_confirmacao-pedido_confirmacao-pedido_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConfirmacaoPedidoPage } from './confirmacao-pedido.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmacaoPedidoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmacaoPedidoPageRoutingModule {}\n","import { PedidoService } from './../../../../services/domain/pedido.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ConfirmacaoPedidoPageRoutingModule } from './confirmacao-pedido-routing.module';\nimport { ConfirmacaoPedidoPage } from './confirmacao-pedido.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConfirmacaoPedidoPageRoutingModule\n  ],\n  declarations: [ConfirmacaoPedidoPage],\n  providers: [\n    PedidoService\n  ]\n})\nexport class ConfirmacaoPedidoPageModule {}\n","import { PedidoService } from './../../../../services/domain/pedido.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClienteService } from 'src/services/domain/cliente.service';\nimport { EnderecoDTO } from './../../../../models/endereco.dto';\nimport { ClienteDTO } from './../../../../models/cliente.dto';\nimport { CartService } from './../../../../services/domain/cart.service';\nimport { PedidoDTO } from './../../../../models/pedido.dto';\nimport { Component, OnInit } from '@angular/core';\nimport { NavController, NavParams } from '@ionic/angular';\nimport { CartItem } from 'src/models/cart-item';\n\n@Component({\n  selector: 'app-confirmacao-pedido',\n  templateUrl: './confirmacao-pedido.page.html',\n  styleUrls: ['./confirmacao-pedido.page.scss'],\n})\nexport class ConfirmacaoPedidoPage implements OnInit {\n\n  pedido: PedidoDTO;\n  cartItems: CartItem[];\n  cliente: ClienteDTO;\n  endereco: EnderecoDTO;\n  codPedido: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public cartService: CartService,\n    public clienteService: ClienteService,\n    public activateRoute: ActivatedRoute,\n    public pedidoService: PedidoService\n  ) { \n    this.pedido = JSON.parse(activateRoute.snapshot.paramMap.get('pedido')) //pega o pedido vindo da pagina anterior de pagamento\n  }\n\n  ngOnInit() {\n    console.log(this.pedido)\n    this.cartItems = this.cartService.getCart().itens; //pega os itens de um carrinho ja existente\n    this.clienteService.encontrarPorId(this.pedido.cliente.id) //busca o cliente\n    .subscribe(resposta => {\n      this.cliente = resposta as ClienteDTO;\n      this.endereco = this.encontrarEndereco(this.pedido.enderecoEntrega.id, resposta['enderecos'])\n    },\n    error => {\n      this.navCtrl.navigateRoot('/folder/components/home');\n    })\n\n  }\n\n  private encontrarEndereco(idd: string, list: EnderecoDTO[]) : EnderecoDTO{\n    let posicao = list.findIndex(x => x.id == idd);\n    return list[posicao];\n  }\n\n  total(){\n    return this.cartService.total();\n  }\n\n  voltar(){\n    this.navCtrl.navigateRoot('/folder/components/carrinho');\n  }\n\n  home(){\n    this.navCtrl.navigateRoot('/folder/components/categorias');\n  }\n\n  finalizarCompra(){ //checkout\n    this.pedidoService.inserir(this.pedido)\n    .subscribe(resposta => {\n      this.cartService.criarOuLimparCarrinho() //limpa o carrinho, pois a compra foi fechada\n      this.codPedido = this.encontrarId(resposta.headers.get('location')) //armazena o numero do Id da url do novo pedido salvo \n    },\n    error => {\n      console.log(error)\n      if(error.status == 403){\n        this.navCtrl.navigateRoot('/folder/components/home');\n      }\n    })\n  }\n\n  private encontrarId(location: string): string{ //armazena o numero do Id da url do novo pedido salvo\n    let posicao = location.lastIndexOf('/'); //encontra a posicao da ultima barra\n    return location.substring(posicao + 1, location.length) //encontra a posicao depois da ultima barra\n  }\n\n\n\n}\n","import { API_CONFIG } from 'src/config/api.config';\r\nimport { PedidoDTO } from './../../models/pedido.dto';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class PedidoService{\r\n\r\n    constructor(public http: HttpClient){\r\n\r\n    } \r\n\r\n    inserir(obj: PedidoDTO){\r\n        return this.http.post(\r\n            `${API_CONFIG.baseUrl}/pedidos`,\r\n            obj,\r\n            {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            }\r\n        );\r\n    }\r\n\r\n}","export default \"h2 {\\n  font-size: 20px;\\n}\\n\\np {\\n  font-size: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpcm1hY2FvLXBlZGlkby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0FBQ0oiLCJmaWxlIjoiY29uZmlybWFjYW8tcGVkaWRvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgye1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG5we1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59Il19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title *ngIf = \\\"codPedido\\\">Pedido Registrado</ion-title>\\n    <ion-title *ngIf = \\\"!codPedido\\\">Confira Seu Pedido</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <div *ngIf = \\\"!codPedido\\\"> <!-- antes de confirmar a compra -->\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>Itens do pedido</ion-card-title>\\n      </ion-card-header>\\n    \\n      <ion-list>\\n        <ion-item *ngFor=\\\"let item of cartItems\\\">\\n          <ion-thumbnail item-start>\\n            <img [src]=\\\"item.produto.imageUrl || 'assets/imgs/prod.jpg'\\\">\\n          </ion-thumbnail>\\n          <ion-label style=\\\"margin-left: 10px;\\\">\\n            <h2>{{item.produto.nome}}</h2>\\n            <p style=\\\"float: right;\\\">{{item.produto.preco * item.quantidade | currency}}</p>\\n            <p>{{item.produto.preco | currency}}</p>\\n            <p class=\\\"nolinebreak\\\" style=\\\"margin-left: 20px;\\\">{{item.quantidade}}</p>\\n          </ion-label>\\n        </ion-item> \\n    \\n        <ion-item>\\n          <h2>Total</h2>\\n          <h2 slot=\\\"end\\\">{{total() | currency}}</h2>\\n        </ion-item>\\n      </ion-list> \\n    </ion-card>\\n    \\n    <ion-card>\\n        <ion-card-header>\\n          Cliente\\n        </ion-card-header>\\n        <ion-item>\\n          <ion-label>\\n            <h2>{{cliente?.nome}}</h2>\\n            <p>{{cliente?.email}}</p>\\n          </ion-label>\\n        </ion-item>\\n    </ion-card>\\n    \\n    <ion-card>\\n      <ion-card-header>\\n        Endereço de entrega\\n      </ion-card-header>\\n    \\n      <ion-item>\\n        <ion-label>\\n          <h2>{{endereco?.logradouro}}, {{endereco?.numero}}</h2>\\n          <p>{{endereco?.complemento}} {{endereco?.bairro}} CEP {{endereco?.cep}}</p>\\n          <p>{{endereco?.cidade.nome}}, {{endereco?.cidade.estado.nome}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-card>\\n    \\n    <ion-card>\\n      <ion-card-header>\\n        Pagamento\\n      </ion-card-header>\\n    \\n      <ion-item *ngIf=\\\"pedido.pagamento['@type']=='pagamentoComCartao'\\\">\\n        <ion-label>\\n          <h3>Pagamento com cartão</h3>\\n          <p>Parcelas: {{pedido.pagamento.numeroParcelas}}</p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"pedido.pagamento['@type']=='pagamentoComBoleto'\\\">\\n        <h3>Pagamento com boleto</h3>\\n      </ion-item>\\n    </ion-card>\\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" (click)=\\\"finalizarCompra()\\\">Confirmar Pedido</ion-button>\\n    <ion-button expand=\\\"full\\\" color=\\\"medium\\\" (click)=\\\"voltar()\\\">Voltar</ion-button>\\n  </div>\\n\\n  <div *ngIf=\\\"codPedido\\\"> <!-- apos confirmar a compra -->\\n    <ion-card>\\n      <ion-list-header>\\n        <h2>Seu pedido foi registrado !</h2>  \\n      </ion-list-header>\\n      <ion-item>\\n        <ion-label>\\n          <h2>Código do pedido: {{codPedido}}</h2>\\n          <p>Verifique seu email</p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-card>\\n    <ion-button expand=\\\"full\\\" color=\\\"medium\\\" (click)=\\\"home()\\\">Voltar</ion-button> <!-- volta p pagina de categorias -->\\n  </div>\\n\\n</ion-content>\";"],"sourceRoot":"webpack:///"}